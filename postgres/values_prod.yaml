# Default values for datapersisters.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "master"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

envVars:
  telegraf:
    influxConnString : http://influxdb.productiedata-data-helm:8086
    mqttConnString : tcp://mosquittomqttbroker.productiedata-data-helm:1883
  mqttservicemii:
    httpProxy: "10.11.32.82"
    mqttPoort: "1883"
    mqttMsgSource: "DOCKER_DEV_Python_mqtt_service_MII|Python|mqtt_service_MII"
    mqttPwd: "8RM61ECW8x7j"
    mqttUsername: "TECH_PythonScript"
    subscribePath: "MII/#"
  mqtttoinflux:
    clientId: "mqtt_to_influx_service"
    mqttIpAddress: "mosquittomqttbroker.productiedata-data-helm"
    mqttPoort: ""
    mqttMsgSource: "GRP-DEV-DOCKER-01|Python|Mqtt_to_Influx.py"
    mqttPwd: "8RM61ECW8x7j"
    mqttUsername: "TECH_PythonScript"
    subscribePath: ""
  opctomqtt:
    subscribeUsername: TECH_PythonScript
    subscribePwd: dLf6DA0Hsagj
    subscribePath: OPC/#
    subscribeIpAddress: 10.11.32.82
    subscribeClientId: Python_OPC_to_Mqtt_Client_01_DEV_DOCKER
    redisIp: dev-redis.productiedata-data
    publishUsername: TECH_PythonScript
    publishPwd: 8RM61ECW8x7j
    publishIpAddress: mosquittomqttbroker.productiedata-data-helm
    publishClientId: Python_OPC_to_Mqtt_Client_02_DEV_DOCKER
    mqttPoort: "1883"
    mqttMsgSource: DEV_DOCKER_Python_OPC_to_Mqtt|Python|OPC_to_Mqtt
    mqttKeepalive: "60"
    dictUpdateInterval: "3600"
  mosquittomqttbroker:
    subscribeUsername: TECH_PythonScript
    subscribePwd: dLf6DA0Hsagj
    subscribePath: OPC/#
    subscribeIpAddress: 10.11.32.82
    subscribeClientId: Python_OPC_to_Mqtt_Client_01_DEV_DOCKER
    redisIp: redis.productiedata-data-helm
    publishUsername: TECH_PythonScript
    publishPwd: 8RM61ECW8x7j
    publishIpAddress: mosquittomqttbroker.productiedata-data-helm
    publishClientId: Python_OPC_to_Mqtt_Client_02_DEV_DOCKER
    mqttPort: "1883"
    mqttMsqSource: DEV_DOCKER_Python_OPC_to_Mqtt|Python|OPC_to_Mqtt
    mqttKeepalive: "60"
    dictUpdateInterval: "3600"

persistence:
  enabled: true
  # Setting it to "keep" to avoid removing PVCs during a helm delete
  # operation. Leaving it empty will delete PVCs after the chart deleted
  # (this does not apply for PVCs that are created for internal database
  # and redis components, i.e. they are never deleted automatically)
  resourcePolicy: "keep"
  redis:
    name: redis-data-pv-prd
    persistentVolume:
      persistentVolumeReclaimPolicy: Retain
      capacity:
        storage: 10Gi
      accessModes:
        - ReadWriteOnce
      storageClassName: thin-disk
      volumeMode: Filesystem
      vsphereVolume:
        volumePath: "[DatastoreGRP] staticvols/redis-data-prd.vmdk"
        fsType: ext4
    persistentVolumeClaim:
      accessModes:
        - ReadWriteOnce
      storageClassName: thin-disk
      volumeMode: Filesystem
      volumeName: redis-data-pv
      resources:
        requests:
          storage: 10Gi
  influxdb:
    name: influxdb-data-pv-prd
    persistentVolume:
      persistentVolumeReclaimPolicy: Retain
      capacity:
        storage: 100Gi
      accessModes:
        - ReadWriteOnce
      storageClassName: zeroed-thick
      volumeMode: Filesystem
      vsphereVolume:
        volumePath: "[DatastoreGRP] staticvols/influxdb-data-prd.vmdk"
        fsType: ext4
    persistentVolumeClaim:
      accessModes:
        - ReadWriteOnce
      storageClassName: zeroed-thick
      volumeMode: Filesystem
      volumeName: influxdb-data-pv-prd
      resources:
        requests:
          storage: 100Gi